# enable receiving remote logs over TCP
module(load="imtcp")
input(type="imtcp" port="514" ruleset="ocf-remote")

# template for remote log lines
template(name="ocf-remote" type="list") {
    property(name="timegenerated" dateFormat="rfc3339")
    constant(value=" ")
    property(name="hostname")
    constant(value=":  ")
    property(name="msg")
    constant(value="\n")
}

# template for errored remote log lines
template(name="ocf-errors" type="list") {
    constant(value="ERRORED_TAG[")
    property(name="syslogtag")
    constant(value="]  MESSAGE[")
    property(name="timegenerated" dateFormat="rfc3339")
    constant(value=" ")
    property(name="hostname")
    constant(value=":  ")
    property(name="msg")
    constant(value="]\n")
}

# template for remote log filenames
template(name="ocf-remote-file" type="list") {
    constant(value="/var/log/remote/")
    # in jessie, syslogtag has a weird ":" appended, so we have to regex that out;
    # the regex bits can be removed when we're totally on stretch.
    property(name="syslogtag" regex.Expression="^[^:]+" regex.Type="ERE" regex.Match="0" SecurePath="replace")
    constant(value=".log")
}

# rules for storing the logs
ruleset(name="ocf-remote") {
    # This regex was fiendish, since the hyphen must be next to the end bracket
    # for it to work.
    #
    # It uses POSIX ERE (http://www.regular-expressions.info/posixbrackets.html)
    # and has a tester at http://www.rsyslog.com/regex/
    #
    # Make sure this at least matches all the items let through in the regex in
    # the stdin2syslog script so that real logs aren't put in errors.log
    if re_match($syslogtag, '^[a-zA-Z0-9:_-]+$') then {
        action(type="omfile" dynaFile="ocf-remote-file" template="ocf-remote" fileGroup="ocfstaff" fileCreateMode="0640")
    } else {
        action(type="omfile" file="/var/log/remote/errors.log" template="ocf-errors" fileGroup="ocfstaff" fileCreateMode="0640")
    }
}
