#!/usr/bin/env python3
"""Trigger puppet agent runs."""
import argparse
import os
import re
import socket
import subprocess
import sys
from textwrap import dedent


def log(*args, file=sys.stderr, **kwargs):
    print(*args, file=file, flush=True, **kwargs)


def trigger_run(flags):
    os.execvp('puppet', ['puppet', 'agent'] + flags)


def switch_to_environment(env):
    log('Switching environment to "{}".'.format(env))

    hostname = socket.gethostname()
    ldif = dedent(
        '''\
        dn: cn={hostname},ou=Hosts,dc=OCF,dc=Berkeley,dc=EDU
        changetype: modify
        replace: environment
        environment: {environment}''',
    ).format(
        hostname=hostname,
        environment=env,
    )

    # TODO: use subprocess.run on python3.5; we don't actually care about stdout here
    subprocess.check_output(
        [
            'kinit',
            '-t', '/etc/krb5.keytab',
            'host/{}.ocf.berkeley.edu@OCF.BERKELEY.EDU'.format(hostname),
            'ldapmodify',
        ],
        input=ldif.encode('utf8'),
    )


def validate_environment(environment):
    if not re.match(r'[a-zA-Z_\-0-9]+$', environment):
        raise ValueError('environment has weird characters')
    else:
        return environment


def main(argv=None):
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument(
        '-e', '--environment', type=validate_environment,
        help='switch to environment before running',
    )
    behavior_group = parser.add_mutually_exclusive_group()
    behavior_group.add_argument(
        '-t', '--test', action='store_true',
        help='run interactively; implies --no-daemonize',
    )
    parser.add_argument(
        '-d', '--debug', action='store_true',
        help='show puppet debug output'
    )
    parser.add_argument(
        '--no-daemonize', action='store_true',
        help='run in foreground'
    )

    args = parser.parse_args(argv)

    if os.geteuid() != 0:
        log('You are not root.')
        return 1

    if args.environment:
        switch_to_environment(args.environment)

    if args.test:
        flags = ['--test']
    else:
        flags = ['--verbose', '--onetime', '--logdest', 'syslog']

    if args.debug:
        flags.append('--debug')
    if args.no_daemonize:
        flags.append('--no-daemonize')

    trigger_run(flags)


if __name__ == '__main__':
    sys.exit(main())
