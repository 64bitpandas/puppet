#!/bin/bash
# Downloads Debian netboot image and prepares for PXE booting and
# automated installations (via preseed file)
# 
# Optionally adds Debian nonfree firmware to initrd

set -e

arch='amd64'
dist='jessie'

#netboot="http://mirrors/debian/dists/$dist/main/installer-$arch/current/images/netboot/netboot.tar.gz"
# we use daily images to get a recent image for unreleased jessie
netboot="http://d-i.debian.org/daily-images/$arch/daily/netboot/netboot.tar.gz"
fw="http://cdimage.debian.org/cdimage/unofficial/non-free/firmware/$dist/current/firmware.tar.gz"
dban="http://sourceforge.net/projects/dban/files/latest/download"
memtest="http://www.memtest.org/download/5.01/memtest86+-5.01.bin.gz"

tftpdir='/opt/tftp'
fwdir='/tmp/di_firmware'

# remove old pxe files
rm -rf $tftpdir
mkdir $tftpdir && chmod 755 $tftpdir

# download and extract netboot image
echo "Downloading netboot.tar.gz..."

cd $tftpdir
wget -q "$netboot"
tar -zxf netboot.tar.gz

if [ -n "$fw" ]; then
  # add non-free firmware to initrd
  echo "Downloading non-free firmware..."
  rm -rf $fwdir
  mkdir  -p $fwdir/firmware
  cd $fwdir
  wget -q "$fw"
  cd $fwdir/firmware
  tar -zxf ../firmware.tar.gz
  cd $fwdir

  echo "Adding non-free firmware to initrd..."
  pax -x sv4cpio -s'%firmware%/firmware%' -w firmware | gzip -c > firmware.cpio.gz

  cd $tftpdir/debian-installer/$arch
  [ -f initrd.gz.orig ] || cp -p initrd.gz initrd.gz.orig
  cat initrd.gz.orig $fwdir/firmware.cpio.gz > initrd.gz
fi

echo "Adding OCF preseed file into installer menu..."
cd $tftpdir/debian-installer/$arch

# unset "Install" as default
sed -i '/menu default/d' boot-screens/txt.cfg

# add OCF install option
echo "label ocf
	menu label OCF Automated Install
	menu default
	kernel debian-installer/amd64/linux
	append auto=true priority=critical locale=en_US keymap=us vga=788 initrd=debian-installer/amd64/initrd.gz -- quiet" >> boot-screens/txt.cfg

# auto-select OCF option after 10 seconds
sed -i 's/timeout 0/timeout 100/' pxelinux.cfg/default

# download DBAN, add to menu
echo "Downloading DBAN..."
cd $tftpdir
wget -q -O dban.iso "$dban"
7z x -odban dban.iso > /dev/null # terrible CLI

find dban -type d -exec chmod 755 {} \;

echo "label dban
	menu label Darik's Boot and Nuke
	kernel dban/DBAN.BZI
	append load_ramdisk=1 root=/dev/ram0 nuke=\"dwipe --autonuke --method zero\"" \
	>> debian-installer/$arch/boot-screens/txt.cfg

# download Memtest86+, add to menu
echo "Downloading Memtest86+..."
cd $tftpdir
mkdir -p memtest
wget -q -O memtest/memtest.bin.gz "$memtest"
gunzip -c memtest/memtest.bin.gz > memtest/memtest

echo "label memtest
	menu label Memtest86+
	kernel memtest/memtest" \
>> debian-installer/$arch/boot-screens/txt.cfg

# clean up
rm $tftpdir/netboot.tar.gz
rm -rf $fwdir
rm dban.iso
rm memtest/memtest.bin.gz

service tftpd-hpa restart

echo "PXE image is ready."
