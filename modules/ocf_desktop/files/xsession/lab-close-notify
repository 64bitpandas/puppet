#!/usr/bin/env python3

import datetime
from gi.repository import Notify
import sched
import time

from ocflib.lab import hours

# 0 minutes, 2 minute, 5 minutes, 10 minutes, 15 minutes
WARNING_DURATIONS = [0, 120, 300, 600, 900]

def notify_user(seconds_left):
    title = 'Lab closure'
    if seconds_left != 0:
        msg = 'Lab closing in {0:g} minutes'.format(seconds_left / 60)
    else:
        msg = 'The lab is now closed. Please log out and leave right away.'

    # TODO: pick an icon
    notif = Notify.Notification(title, msg)
    notif.show()

def main():
    today = datetime.datetime.today()
    closing_times = [
        datetime.datetime.combine(today.date(), hour.close).timestamp()
        for hour in Day.from_date().hours
    ]

    # unix timestamps (seconds since epoch) for the closing times today
    closing_times = [datetime.datetime.combine(today.date(), x).timestamp()
            for x in closing_hours]

    s = sched.scheduler(time.time)

    for t in closing_times:
        for d in WARNING_DURATIONS:
            s.enterabs(t - d, 0, notify_user, argument=(d,))

    Notify.init('OCF')
    s.run()

if __name__ == '__main__':
    main()
